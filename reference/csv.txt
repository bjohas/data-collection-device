FIL fileobj;            /* File objects */
    FRESULT fr;             /* FatFs function common result code */
    UINT br;                /* File read/write count */
    
    uint32_t size=0;        /* File size */    
    uint8_t buf[512];	    /* File read/write data buffer */   
    uint8_t p[25];          /* File path */    
    
    if(SD_STU_OK == BSP_SdCheck())		
    {   
        sprintf((char *)buf,"FC%02d%02d%02d.csv",(RTC_GetTimeYear()%100),RTC_GetTimeMonth(),RTC_GetTimeDate());//按日期进行数据存储
        sprintf((char *)p,"0:/%s",buf); //0:为SD卡盘符
        fr = f_open (&fileobj,"0:data.csv", FA_OPEN_ALWAYS | FA_WRITE);
        if(fr == FR_OK)
        {
            size = f_size(&fileobj);            
            if(size == 0) //第一次创建文件,添加标题栏
            {
                memset(buf,0,sizeof(buf));
                sprintf((char *)buf,"%s,%s,%s\r\n","Time","SysStep","ErrCode");
                fr= f_write(&fileobj, buf, sizeof(buf),(void *)&br);
                if(fr != FR_OK){
                    printf("Title write process error code is %d...\r\n",fr);  
                }   
            }else{    
                OS_CRITICAL_ENTER();              //防止写数据过程被打断
                fr= f_lseek(&fileobj,size);       //指针移至文件尾部,追加数据，如果用追加方式打开文件则不需要
                
                /* 分组追加运行数据 */
                for(int i=0;i<FUN_LIST_SIZE;i++){
                    
                    memset(buf,0,sizeof(buf));
                    sprintf((char *)buf,"%d:%d:%d,%d,%d,", 
                             RTC_GetTimeHours(),
                             RTC_GetTimeMinutes(),
                             RTC_GetTimeSeconds(),
                             sys_step,
                             sys_errCode);
                    fr = f_write(&fileobj, buf, sizeof(buf),(void *)&br);
                    if(fr != FR_OK){
                        printf("Data write process error code is %d...\r\n",fr);  
                    }
                }
            }            
        }else{
            printf("File Open failed,error code is %d...\r\n",fr);  
        }
        fr = f_close(&fileobj);
        if(fr != FR_OK){
            printf("f_close error code is %d...\r\n",fr);  
        }        
        OS_CRITICAL_EXIT();    
    }else{
        printf("SD Card check err...\r\n");  
    }
    SetSD_CardStau(SD_STU_IDLE);